/**
 * ES6允许我们使用字符串模板来嵌入JS的变量或者表达式来进行拼接：
 *  - 可以不再使用 + 来进行拼接操作
 * ES6的模板字符串不再采用加号进行拼接，而是使用${}进行插值，其中的整体割裂感得以削减
 */
const name = "小余";
const age = 20;
//ES6之前的拼接
const info = "今天来的人是" + name + "他今年" + age + "岁了";
console.log(info);
//ES6之后的拼接(模板字符串)
const info2 = `今天来的人是${name}他今年${age}岁了`;
console.log(info2);

/**
 * 拼接方式只是其中的一个功能
 *  - 最主要${} 使用角度非常自由
 *  - ${} 中可以编写表达式 还可以进行函数调用
 * 例如
 *  - 比如在构建动态生成的内容，如动态SQL语句或HTML时，传统的字符串拼接可能容易引入注入攻击的风险。
 *  - 模板字符串可以与库结合使用，如标签模板，以确保字符串是安全处理的，例如自动转义
 */
const name2 = "小余";
const age2 = 20;
//表达式
console.log(`${name2}今年${age2 * 2}`); //小余今年40
//函数调用
const foo = function (name) {
  //例如可以调用对应的翻译API，将中文名转为英文名，实现一定的功能
  return name; // 直接return的语句，后续在调用的时候也是直接进行返回操作
};
console.log(`${foo(name2)}今年${age2}`); //小余今年20
